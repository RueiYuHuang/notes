DOM節點選擇

//全部選擇(回傳一個)
document.querySelector(' ');
//全部選擇(回傳陣列)
document.querySelectorAll(' ')[ ];
//ID選擇(回傳一個)
document.getElementById
//class選擇(回傳陣列)
document.getElementsByClassName
//標籤選擇(回傳陣列)
document.getElementsByTagName


//父節點
.parentNode

//第一或最後一個子節點
.firstChild/.lastChild

//前一個或後一個兄弟節點
.previousSibling/.nextSibling

//
childNodes[]


//取得內容
.textContent
.innerText
.innetHTML  //*安全問題(使用者輸入不建議使用)未受信任來源字元跳脫處理
.nodeValue  //需加入節點位置 ex. firstChild.nodeValue 


----加入元件----
let newTag = document.createElement('li'); //建立標籤

newTag.textContent ='New Content';//方法一 建立內容 
OR
let newTagText = document.createTextNode('New Content'); //方法二 建立內容
newTag.appendChild(newTagText);//標籤加入內容

let position = document.querySelectorAll('#text li')[0] ; //新節點加入的位置
position.appendChild(newTag);//加入元件

position.insertBefore(newTag,position.firstChild);//加入至起始位置

----移除元件----
let deleTag = document.querySelectorAll('#text li')[0] ; //欲移除的元件

deleTag.remove();
OR
let position = deleTag.parentNode;//欲移除的元件的父節點
position.removeChild(deleTag);//移除元件


----設定屬性節點----
ex. 
if(document.querySelector('').hasAttribute('class')){
	OOXX.getAttribute('class');
	OOXX.removeAttribute('class');
};

//取得屬性值內容
.getAttribute('')

//檢察屬性值是否存在
.hasAttribute('')

//設定屬性值 ex.  .setAttribute('type','input');
.setAttribute('','')

//移除屬性值
.removeAttribute('')

//變更屬性值內容
.className .id .value .title .href .name = XXXX



//停止元件預設行為
preventDefault() 
//停止事件傳播
stopPropagation()


//取得下拉選單內容 select option "change"
 this.options[this.selectedIndex].value

//計算子節點的數量
.children.length

----陣列使用----
arr=["A","B","C","D","E"];

arr.


