git config --global user.name "XXXX"
git config --global user.email "XXXX@XXXX.com"

//改成GIT管理
git init

//git 檔案狀態 是否更動
git status
git st 縮寫

//看檔案變更
git diff <fileName>

//加入暫存
git add . 
git add <fileName>
//取消暫存
git rm --cached <fileName>


//建立新版本
git commit -m ""
git ci 縮寫 
//已加入的檔案建立新版本
git commit -am ""


//查看版本更新
git log

//上傳
git push 
git push --set-upstream origin <branchName>

//下載
git pull 
//下載 解決衝突
git pull --no-rebase 

//查看本地分支
git branch
//查看遠端分支
git branch -r

//創建分支
git branch <branchName>

//切換分支
git checkout <branchName>
git switch <branchName>

//協做檔案遠端下載
git clone <link>

//追蹤遠端分支 到 本地分支
git branch --set-upstream-to=origin/feature/ui_fixed feature/ui_fixed

//移除在staged的檔案
git restore --staged middleware/auth-app.js
//移除在staged的所有檔案 
git restore --staged :/

--Stash(暫存)--
// 暫時儲存現狀的操作
git stash save
//顯示暫存清單
git stash list
// 恢復暫存的操作
git stash pop
// 刪除暫存的操作
git stash drop
// 刪除所有暫存的操作
git stash clear
---重新命名 Git 遠端分支---
1.在本地重新命名分支名稱
git branch -m <New_Branch_Name>
# OR
git branch -m <Old_Branch_Name> <New_Branch_Name>

2.將分支名稱的更改推送到遠端倉庫
git push origin :<Old_Branch_Name> <New_Branch_Name>

3.設定本地分支以跟蹤同名的遠端倉庫，為此，我們需要使用以下語法
git push --set-upstream origin <New_Branch_Name>

---合併分支方法--
//檢查更新
git pull
//切換回主支
git checkout "main"
//合併
git merge <要合併的分支>
//刪除分支本地
git branch -d <branch>
//刪除分支遠端
git push <remote> --delete <branch>
EX git push origin --delete fix/authentication

//檢查遠端分支
git fetch 
//更新遠端分支
git rebase <branch>

//取消分支
git revert <commit>
 編輯 i
退出儲存 :wq
---------------------------------
.gitconfig 檔案加入&縮寫
[alias]
	co = checkout
	br = branch
	ci = commit
	st = status
      lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=iso
	l = log --oneline --graph
      la = log --all --oneline --decorate --graph
[user]
	name = RueiYuHuang
	email = b98170022@gmail.com
